{"id":"mergeSort.js","dependencies":[{"name":"C:\\Users\\NabeelAhmedKhan\\Documents\\Study\\AAA\\Assignments\\Code\\package.json","includedInParent":true,"mtime":1665755741042}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar MergeSort = /*#__PURE__*/function () {\n  function MergeSort() {\n    _classCallCheck(this, MergeSort);\n  }\n\n  _createClass(MergeSort, [{\n    key: \"sort\",\n    value: function sort(arr) {\n      var half = arr.length / 2; // Base case or terminating case\n\n      if (arr.length < 2) {\n        return arr;\n      }\n\n      var left = arr.splice(0, half);\n      return this.merge(this.sort(left), this.sort(arr));\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(left, right) {\n      var arr = []; // Break out of loop if any one of the array gets empty\n\n      while (left.length && right.length) {\n        // Pick the smaller among the smallest element of left and right sub arrays\n        if (left[0] < right[0]) {\n          arr.push(left.shift());\n        } else {\n          arr.push(right.shift());\n        }\n      } // Concatenating the leftover elements\n      // (in case we didn't go through the entire left or right array)\n\n\n      return [].concat(arr, _toConsumableArray(left), _toConsumableArray(right));\n    }\n  }]);\n\n  return MergeSort;\n}();\n\nexports.default = MergeSort;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":26,"column":4},"source":"mergeSort.js","original":{"line":1,"column":21},"name":"MergeSort"},{"generated":{"line":33,"column":11},"source":"mergeSort.js","original":{"line":2,"column":2}},{"generated":{"line":33,"column":25},"source":"mergeSort.js","original":{"line":2,"column":7},"name":"arr"},{"generated":{"line":33,"column":28},"source":"mergeSort.js","original":{"line":2,"column":2}},{"generated":{"line":33,"column":30},"source":"mergeSort.js","original":{"line":2,"column":12}},{"generated":{"line":34,"column":6},"source":"mergeSort.js","original":{"line":3,"column":4}},{"generated":{"line":34,"column":10},"source":"mergeSort.js","original":{"line":3,"column":10},"name":"half"},{"generated":{"line":34,"column":14},"source":"mergeSort.js","original":{"line":3,"column":14}},{"generated":{"line":34,"column":17},"source":"mergeSort.js","original":{"line":3,"column":17},"name":"arr"},{"generated":{"line":34,"column":20},"source":"mergeSort.js","original":{"line":3,"column":20}},{"generated":{"line":34,"column":21},"source":"mergeSort.js","original":{"line":3,"column":21},"name":"length"},{"generated":{"line":34,"column":27},"source":"mergeSort.js","original":{"line":3,"column":17}},{"generated":{"line":34,"column":30},"source":"mergeSort.js","original":{"line":3,"column":30}},{"generated":{"line":34,"column":31},"source":"mergeSort.js","original":{"line":3,"column":4}},{"generated":{"line":34,"column":32},"source":"mergeSort.js","original":{"line":2,"column":12}},{"generated":{"line":34,"column":33},"source":"mergeSort.js","original":{"line":5,"column":4}},{"generated":{"line":36,"column":6},"source":"mergeSort.js","original":{"line":6,"column":4}},{"generated":{"line":36,"column":10},"source":"mergeSort.js","original":{"line":6,"column":8},"name":"arr"},{"generated":{"line":36,"column":13},"source":"mergeSort.js","original":{"line":6,"column":11}},{"generated":{"line":36,"column":14},"source":"mergeSort.js","original":{"line":6,"column":12},"name":"length"},{"generated":{"line":36,"column":20},"source":"mergeSort.js","original":{"line":6,"column":8}},{"generated":{"line":36,"column":23},"source":"mergeSort.js","original":{"line":6,"column":21}},{"generated":{"line":36,"column":24},"source":"mergeSort.js","original":{"line":6,"column":4}},{"generated":{"line":36,"column":26},"source":"mergeSort.js","original":{"line":6,"column":24}},{"generated":{"line":37,"column":8},"source":"mergeSort.js","original":{"line":7,"column":6}},{"generated":{"line":37,"column":15},"source":"mergeSort.js","original":{"line":7,"column":13},"name":"arr"},{"generated":{"line":37,"column":18},"source":"mergeSort.js","original":{"line":7,"column":6}},{"generated":{"line":38,"column":6},"source":"mergeSort.js","original":{"line":8,"column":5}},{"generated":{"line":40,"column":6},"source":"mergeSort.js","original":{"line":10,"column":4}},{"generated":{"line":40,"column":10},"source":"mergeSort.js","original":{"line":10,"column":10},"name":"left"},{"generated":{"line":40,"column":14},"source":"mergeSort.js","original":{"line":10,"column":14}},{"generated":{"line":40,"column":17},"source":"mergeSort.js","original":{"line":10,"column":17},"name":"arr"},{"generated":{"line":40,"column":20},"source":"mergeSort.js","original":{"line":10,"column":20}},{"generated":{"line":40,"column":21},"source":"mergeSort.js","original":{"line":10,"column":21},"name":"splice"},{"generated":{"line":40,"column":27},"source":"mergeSort.js","original":{"line":10,"column":17}},{"generated":{"line":40,"column":28},"source":"mergeSort.js","original":{"line":10,"column":28}},{"generated":{"line":40,"column":29},"source":"mergeSort.js","original":{"line":10,"column":17}},{"generated":{"line":40,"column":31},"source":"mergeSort.js","original":{"line":10,"column":31},"name":"half"},{"generated":{"line":40,"column":35},"source":"mergeSort.js","original":{"line":10,"column":17}},{"generated":{"line":40,"column":36},"source":"mergeSort.js","original":{"line":10,"column":4}},{"generated":{"line":41,"column":6},"source":"mergeSort.js","original":{"line":11,"column":4}},{"generated":{"line":41,"column":13},"source":"mergeSort.js","original":{"line":11,"column":11}},{"generated":{"line":41,"column":18},"source":"mergeSort.js","original":{"line":11,"column":16},"name":"merge"},{"generated":{"line":41,"column":23},"source":"mergeSort.js","original":{"line":11,"column":11}},{"generated":{"line":41,"column":24},"source":"mergeSort.js","original":{"line":11,"column":22}},{"generated":{"line":41,"column":29},"source":"mergeSort.js","original":{"line":11,"column":27},"name":"sort"},{"generated":{"line":41,"column":33},"source":"mergeSort.js","original":{"line":11,"column":22}},{"generated":{"line":41,"column":34},"source":"mergeSort.js","original":{"line":11,"column":32},"name":"left"},{"generated":{"line":41,"column":38},"source":"mergeSort.js","original":{"line":11,"column":22}},{"generated":{"line":41,"column":39},"source":"mergeSort.js","original":{"line":11,"column":11}},{"generated":{"line":41,"column":41},"source":"mergeSort.js","original":{"line":11,"column":39}},{"generated":{"line":41,"column":46},"source":"mergeSort.js","original":{"line":11,"column":44},"name":"sort"},{"generated":{"line":41,"column":50},"source":"mergeSort.js","original":{"line":11,"column":39}},{"generated":{"line":41,"column":51},"source":"mergeSort.js","original":{"line":11,"column":49},"name":"arr"},{"generated":{"line":41,"column":54},"source":"mergeSort.js","original":{"line":11,"column":39}},{"generated":{"line":41,"column":55},"source":"mergeSort.js","original":{"line":11,"column":11}},{"generated":{"line":41,"column":56},"source":"mergeSort.js","original":{"line":11,"column":4}},{"generated":{"line":42,"column":4},"source":"mergeSort.js","original":{"line":12,"column":3}},{"generated":{"line":45,"column":11},"source":"mergeSort.js","original":{"line":13,"column":2}},{"generated":{"line":45,"column":26},"source":"mergeSort.js","original":{"line":13,"column":8},"name":"left"},{"generated":{"line":45,"column":30},"source":"mergeSort.js","original":{"line":13,"column":2}},{"generated":{"line":45,"column":32},"source":"mergeSort.js","original":{"line":13,"column":14},"name":"right"},{"generated":{"line":45,"column":37},"source":"mergeSort.js","original":{"line":13,"column":2}},{"generated":{"line":45,"column":39},"source":"mergeSort.js","original":{"line":13,"column":21}},{"generated":{"line":46,"column":6},"source":"mergeSort.js","original":{"line":14,"column":4}},{"generated":{"line":46,"column":10},"source":"mergeSort.js","original":{"line":14,"column":8},"name":"arr"},{"generated":{"line":46,"column":13},"source":"mergeSort.js","original":{"line":14,"column":11}},{"generated":{"line":46,"column":16},"source":"mergeSort.js","original":{"line":14,"column":14}},{"generated":{"line":46,"column":18},"source":"mergeSort.js","original":{"line":14,"column":4}},{"generated":{"line":46,"column":19},"source":"mergeSort.js","original":{"line":13,"column":21}},{"generated":{"line":46,"column":20},"source":"mergeSort.js","original":{"line":15,"column":4}},{"generated":{"line":48,"column":6},"source":"mergeSort.js","original":{"line":16,"column":4}},{"generated":{"line":48,"column":13},"source":"mergeSort.js","original":{"line":16,"column":11},"name":"left"},{"generated":{"line":48,"column":17},"source":"mergeSort.js","original":{"line":16,"column":15}},{"generated":{"line":48,"column":18},"source":"mergeSort.js","original":{"line":16,"column":16},"name":"length"},{"generated":{"line":48,"column":24},"source":"mergeSort.js","original":{"line":16,"column":11}},{"generated":{"line":48,"column":28},"source":"mergeSort.js","original":{"line":16,"column":26},"name":"right"},{"generated":{"line":48,"column":33},"source":"mergeSort.js","original":{"line":16,"column":31}},{"generated":{"line":48,"column":34},"source":"mergeSort.js","original":{"line":16,"column":32},"name":"length"},{"generated":{"line":48,"column":40},"source":"mergeSort.js","original":{"line":16,"column":4}},{"generated":{"line":48,"column":42},"source":"mergeSort.js","original":{"line":16,"column":40}},{"generated":{"line":49,"column":8},"source":"mergeSort.js","original":{"line":17,"column":6}},{"generated":{"line":50,"column":8},"source":"mergeSort.js","original":{"line":18,"column":6}},{"generated":{"line":50,"column":12},"source":"mergeSort.js","original":{"line":18,"column":10},"name":"left"},{"generated":{"line":50,"column":16},"source":"mergeSort.js","original":{"line":18,"column":14}},{"generated":{"line":50,"column":17},"source":"mergeSort.js","original":{"line":18,"column":15}},{"generated":{"line":50,"column":18},"source":"mergeSort.js","original":{"line":18,"column":14}},{"generated":{"line":50,"column":19},"source":"mergeSort.js","original":{"line":18,"column":10}},{"generated":{"line":50,"column":22},"source":"mergeSort.js","original":{"line":18,"column":20},"name":"right"},{"generated":{"line":50,"column":27},"source":"mergeSort.js","original":{"line":18,"column":25}},{"generated":{"line":50,"column":28},"source":"mergeSort.js","original":{"line":18,"column":26}},{"generated":{"line":50,"column":29},"source":"mergeSort.js","original":{"line":18,"column":25}},{"generated":{"line":50,"column":30},"source":"mergeSort.js","original":{"line":18,"column":6}},{"generated":{"line":50,"column":32},"source":"mergeSort.js","original":{"line":18,"column":30}},{"generated":{"line":51,"column":10},"source":"mergeSort.js","original":{"line":19,"column":8},"name":"arr"},{"generated":{"line":51,"column":13},"source":"mergeSort.js","original":{"line":19,"column":11}},{"generated":{"line":51,"column":14},"source":"mergeSort.js","original":{"line":19,"column":12},"name":"push"},{"generated":{"line":51,"column":18},"source":"mergeSort.js","original":{"line":19,"column":8}},{"generated":{"line":51,"column":19},"source":"mergeSort.js","original":{"line":19,"column":17},"name":"left"},{"generated":{"line":51,"column":23},"source":"mergeSort.js","original":{"line":19,"column":21}},{"generated":{"line":51,"column":24},"source":"mergeSort.js","original":{"line":19,"column":22},"name":"shift"},{"generated":{"line":51,"column":29},"source":"mergeSort.js","original":{"line":19,"column":17}},{"generated":{"line":51,"column":31},"source":"mergeSort.js","original":{"line":19,"column":8}},{"generated":{"line":52,"column":8},"source":"mergeSort.js","original":{"line":20,"column":7}},{"generated":{"line":52,"column":9},"source":"mergeSort.js","original":{"line":18,"column":6}},{"generated":{"line":52,"column":15},"source":"mergeSort.js","original":{"line":20,"column":13}},{"generated":{"line":53,"column":10},"source":"mergeSort.js","original":{"line":21,"column":8},"name":"arr"},{"generated":{"line":53,"column":13},"source":"mergeSort.js","original":{"line":21,"column":11}},{"generated":{"line":53,"column":14},"source":"mergeSort.js","original":{"line":21,"column":12},"name":"push"},{"generated":{"line":53,"column":18},"source":"mergeSort.js","original":{"line":21,"column":8}},{"generated":{"line":53,"column":19},"source":"mergeSort.js","original":{"line":21,"column":17},"name":"right"},{"generated":{"line":53,"column":24},"source":"mergeSort.js","original":{"line":21,"column":22}},{"generated":{"line":53,"column":25},"source":"mergeSort.js","original":{"line":21,"column":23},"name":"shift"},{"generated":{"line":53,"column":30},"source":"mergeSort.js","original":{"line":21,"column":17}},{"generated":{"line":53,"column":32},"source":"mergeSort.js","original":{"line":21,"column":8}},{"generated":{"line":54,"column":8},"source":"mergeSort.js","original":{"line":22,"column":7}},{"generated":{"line":55,"column":6},"source":"mergeSort.js","original":{"line":23,"column":5}},{"generated":{"line":55,"column":7},"source":"mergeSort.js","original":{"line":13,"column":21}},{"generated":{"line":55,"column":8},"source":"mergeSort.js","original":{"line":25,"column":4}},{"generated":{"line":56,"column":6},"source":"mergeSort.js","original":{"line":26,"column":4}},{"generated":{"line":59,"column":6},"source":"mergeSort.js","original":{"line":27,"column":4}},{"generated":{"line":59,"column":23},"source":"mergeSort.js","original":{"line":27,"column":15},"name":"arr"},{"generated":{"line":59,"column":26},"source":"mergeSort.js","original":{"line":27,"column":4}},{"generated":{"line":59,"column":47},"source":"mergeSort.js","original":{"line":27,"column":23},"name":"left"},{"generated":{"line":59,"column":51},"source":"mergeSort.js","original":{"line":27,"column":4}},{"generated":{"line":59,"column":73},"source":"mergeSort.js","original":{"line":27,"column":32},"name":"right"},{"generated":{"line":59,"column":78},"source":"mergeSort.js","original":{"line":27,"column":4}},{"generated":{"line":60,"column":4},"source":"mergeSort.js","original":{"line":28,"column":3}}],"sources":{"mergeSort.js":"export default class MergeSort {\r\n  sort(arr) {\r\n    const half = arr.length / 2;\r\n\r\n    // Base case or terminating case\r\n    if (arr.length < 2) {\r\n      return arr;\r\n    }\r\n\r\n    const left = arr.splice(0, half);\r\n    return this.merge(this.sort(left), this.sort(arr));\r\n  }\r\n  merge(left, right) {\r\n    let arr = [];\r\n    // Break out of loop if any one of the array gets empty\r\n    while (left.length && right.length) {\r\n      // Pick the smaller among the smallest element of left and right sub arrays\r\n      if (left[0] < right[0]) {\r\n        arr.push(left.shift());\r\n      } else {\r\n        arr.push(right.shift());\r\n      }\r\n    }\r\n\r\n    // Concatenating the leftover elements\r\n    // (in case we didn't go through the entire left or right array)\r\n    return [...arr, ...left, ...right];\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"af2420ba0867be943cb425e735e9b497","cacheData":{"env":{}}}